PROCEDURE "att::initCustomTOA_bySapObject"( 
	IN iv_sap_object NVARCHAR(10),
	IN iv_object_id  NVARCHAR(50)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   DECLARE CURSOR lc_mapped_tables
	FOR SELECT	tabname,
				filename
		FROM "att::MappingPointers";


   --reset in-memory TOA table
   DELETE FROM "att::CustomTOAContent" WHERE sap_object = iv_sap_object AND objid LIKE iv_object_id;

   --read mapped pointers and update the in-memory TOA table
	FOR ls_mapped_tables AS lc_mapped_tables DO

		--read pointer content
		CALL "att::getDynamical_bySapObject"(
	   		TABNAME => ls_mapped_tables.tabname,
	   		IV_SAP_OBJECT => iv_sap_object,
	   		IV_OBJECT_ID  => iv_object_id,
	   		OUTTAB  => lt_custom_pointers);	

	   --update in-memory TOA table
	   UPSERT "att::CustomTOAContent"
		SELECT MANDT,
			   SAP_OBJECT,
			   OBJID,
			   ARCHIV_ID,
			   ARC_DOC_ID,
			   DATE,
			   SUBSTRING(AR_OBJECT,1,10) AS AR_OBJECT,
			   RESERVE,
			   FILENAME,
			   ' ' AS BLOB_DATA
		  FROM :lt_custom_pointers
		  WHERE sap_object = iv_sap_object
		  ORDER BY MANDT, SAP_OBJECT, OBJID, ARCHIV_ID, ARC_DOC_ID;
	END FOR;
	
	/* Force commit, otherwise when called from XSJS module it doesn't update the DB */
	COMMIT;
END;